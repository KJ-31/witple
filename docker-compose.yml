services:
  # PostgreSQL Database
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: witple_postgres
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - witple_network
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: witple_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - witple_network

  # Collection Server (Node.js)
  collection-server:
    build:
      context: ./collection-server
      dockerfile: Dockerfile
    container_name: witple_collection_server
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - S3_EVENTS_BUCKET=${S3_EVENTS_BUCKET:-user-actions-data}
      - S3_PREFIX=${S3_PREFIX:-user-actions/}
      - AWS_REGION=${AWS_REGION:-ap-northeast-2}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://backend:8000/api/v1/batch-processing/webhook/completion}
      - MAX_BUFFER_SIZE=${MAX_BUFFER_SIZE:-100}
      - FLUSH_INTERVAL_MS=${FLUSH_INTERVAL_MS:-300000}
    volumes:
      - ~/.aws:/root/.aws:ro
    networks:
      - witple_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  # Backend (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: witple_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - redis
    volumes:
      - ./backend:/app
      - ~/.aws:/root/.aws:ro
    networks:
      - witple_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
        NEXT_PUBLIC_API_BASE: ""
    container_name: witple_frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - API_INTERNAL_URL=http://backend:8000
      - NEXT_PUBLIC_API_BASE=/api
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_COLLECTION_SERVER_URL=http://collection-server:8080
      - NODE_ENV=production
    depends_on:
      - backend
      - collection-server
    networks:
      - witple_network
volumes:
  postgres_data:
  redis_data:
networks:
  witple_network:
    driver: bridge